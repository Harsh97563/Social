
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StreakTypes {
  DAYS10
  DAYS30
  DAYS60
  DAYS100
}

model User {
  userId           String   @id @default(cuid())
  username         String?  @unique
  email            String   @unique
  profilePicSrc    String?   
  password         String?
  isVerified       Boolean  @default(false)
  verificationCode Int?
  activeSteakId String?
  posts  Post[] 
  LikedPosts Like[]
  comments Comment[]
  createdAt DateTime @default(now())
}

model Post {
  userId String 
  postId String @unique @id @default(cuid())
  caption String?
  files  String[] @default([])
  user User @relation(fields: [userId], references: [userId])
  LikedBy Like[]
  likesCount Int @default(0)
  comments Comment[]
  streakId String?
  streak Streak? @relation(fields: [streakId], references: [streakId])

  createdAt DateTime @default(now())
}


model Streak {
  streakId String @id @default(cuid())
  type StreakTypes
  userId String
  startDate DateTime @default(now())
  endDate DateTime?
  streakCount Int @default(0)
  updatedAt DateTime @updatedAt
  post Post[]
}

model Like {
  id String @id @default(uuid())
  postId String
  userId String
  user User @relation(fields: [userId], references: [userId])
  post Post @relation(fields: [postId], references: [postId])
  @@unique([postId, userId])
}


model Comment {
  id String @id @default(uuid())
  comment String
  postId String
  userId String
  post Post @relation(fields: [postId], references: [postId])
  user User @relation(fields: [userId], references: [userId])
}
